#pragma checksum "D:\tasks\TasksApp\Pages\TaskEdit.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2f79b8c0c3a8492a7174aa4291ce8b8474075d89"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TasksApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\tasks\TasksApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\tasks\TasksApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\tasks\TasksApp\_Imports.razor"
using TasksApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\tasks\TasksApp\_Imports.razor"
using TasksApp.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/TaskEdit")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/TaskEdit/{pageType:int}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/TaskEdit/{pageType:int}/{taskID:int}")]
    public partial class TaskEdit : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 62 "D:\tasks\TasksApp\Pages\TaskEdit.razor"
       
    [Parameter]
    public Int32 taskID { get; set; }
    [Parameter]
    public Int32 pageType { get; set; }

    Miscellaneous.Miscellaneous.PageOperations PageType = Miscellaneous.Miscellaneous.PageOperations.None;
    DatabaseControl.DatabaseObjects.Task currentTask { get; set; } = new DatabaseControl.DatabaseObjects.Task();
    Int32 ParentID { get; set; } = 0;
    ObjectStructures.UserTask userTask { get; set; } = new ObjectStructures.UserTask();

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => SetPageSetting());
    }

    void SetPageSetting()
    {
        PageType = (Miscellaneous.Miscellaneous.PageOperations)pageType;
        InitializeTask();

    }
    void InitializeTask()
    {
        if (PageType.Equals(Miscellaneous.Miscellaneous.PageOperations.Edit) || PageType.Equals(Miscellaneous.Miscellaneous.PageOperations.View))
        {
            DatabaseControl.DatabaseLink.TaskFunctions.RetrieveTask(taskID, currentTask);
            userTask.SetUserTaskFromDatabaseTask(currentTask);
            return;
        }
        if (PageType.Equals(Miscellaneous.Miscellaneous.PageOperations.AddSubtask))
        {
            ParentID = taskID;
        }

    }

    void FormValidate()
    {
        if (PageType.Equals(Miscellaneous.Miscellaneous.PageOperations.Edit))
        {
            UpdateTask();
            FormCancel();
        }
        else if (pageType.Equals(Miscellaneous.Miscellaneous.PageOperations.View)) FormCancel();
        else
        {
            InsertTask();
            FormCancel();
        }
    }

    void UpdateTask()
    {
        userTask.SetDatabaseTaskFromUserTask(currentTask);
        DatabaseControl.DatabaseLink.TaskFunctions.UpdateTask(currentTask);
    }

    void InsertTask()
    {
        userTask.SetDatabaseTaskFromUserTask(currentTask);
        currentTask.ParentTask = ParentID;
        DatabaseControl.DatabaseLink.TaskFunctions.InsertTask(currentTask);
    }

    void FormCancel()
    {
        myNavigationManager.NavigateTo("/tasks");
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager myNavigationManager { get; set; }
    }
}
#pragma warning restore 1591
