// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LocationDisplay.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using LocationDisplay;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\_Imports.razor"
using LocationDisplay.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\Pages\FetchData.razor"
using LocationDisplay.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\Pages\FetchData.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\Pages\FetchData.razor"
using GoogleMapsComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\Pages\FetchData.razor"
using GoogleMapsComponents.Maps;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/fetchdata")]
    public partial class FetchData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 23 "E:\GitRepos\MentorSynch\LocationDisplay\LocationDisplay\Pages\FetchData.razor"
       
    List<DatabaseConnection.DatabaseObjects.ServerLocation> locations = new List<DatabaseConnection.DatabaseObjects.ServerLocation>();
    GoogleMapsComponents.Maps.Marker marker;
    Polyline polyline;


    static List<LatLngLiteral> pathpoints = new List<LatLngLiteral>();



    private GoogleMap map1 = new GoogleMap();

    private MapOptions mapOptions = new MapOptions()
    {
        Zoom = 19,
        Center = new LatLngLiteral()
        {
            Lat = 44.18989707,
            Lng = 28.62403504
        },
        MapTypeId = MapTypeId.Roadmap
    };

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => DatabaseConnection.DatabaseLink.LocationFunctions.RetrieveLocationHistory(locations));
#pragma warning disable CS4014 
        Task.Run(() => rebuildURL());
#pragma warning restore
    }

    private async void UpdateMap(Double latitude, Double longitude)
    {
        if(polyline == null)
        {
            polyline = await Polyline.CreateAsync(map1.JsRuntime, new PolylineOptions()
            {
                StrokeColor =  "#FF0000",
                Draggable = true,
                Editable = true,
                StrokeWeight =  3,
                Map = map1.InteropObject
            });
        }
        else
        {
#pragma warning disable CS4014 
            polyline.SetPath(pathpoints);
#pragma warning restore
        }

        if(marker == null)
            marker = await Marker.CreateAsync(map1.JsRuntime, new MarkerOptions()
            {
                Position = new LatLngLiteral()
                {
                    Lat = latitude,
                    Lng = longitude
                },
                Map = map1.InteropObject
            });
        else
        {
            var position = new LatLngLiteral()
            {
                Lat = latitude,
                Lng = longitude
            };
#pragma warning disable CS4014 
            marker.SetPosition(position);
            map1.InteropObject.PanTo(position);
#pragma warning restore
        }
        pathpoints.Add(new LatLngLiteral()
        {
            Lat = latitude,
            Lng = longitude
        });

    }

    private void createPath()
    {
        foreach (var element in locations.Distinct(new LocationDisplay.DatabaseConnection.DatabaseObjects.LocationComparer()).OrderBy(x => x.LastUpdate))
        {
            pathpoints.Add(new LatLngLiteral()
            {
                Lat = element.Latitude,
                Lng = element.Longitude
            });
        }
    }

    private void rebuildURL()
    {
        foreach (var element in locations.Distinct(new LocationDisplay.DatabaseConnection.DatabaseObjects.LocationComparer()))
        {
            //JSRuntime.InvokeVoidAsync("setMarker", new Object[] { this.javaMap, element.Latitude, element.Longitude });
            UpdateMap(element.Latitude, element.Longitude);
            System.Threading.Thread.Sleep(LocationDisplay.PublicObjects.Settings.AnimationSpeed);
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
