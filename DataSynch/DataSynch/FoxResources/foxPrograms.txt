*mem2ini.prg
*<Separator/>*
************************************************
LPARAMETERS pMemoryFile
************************************************
	
	RESTORE FROM <InitialMemoryFile> &&the memory file marker will be replaced at before recompiling the program
		 
	ERASE mem.tmp
	LIST MEMORY LIKE m_* TO mem.tmp NOCONSOLE 
	fi = FOPEN('mem.tmp')
	IF FILE('mem_bak.ini') AND FILE('mem.ini')
		ERASE mem_bak.ini

	ENDIF 
	IF FILE('mem.ini')
		COPY FILE mem.ini TO mem_bak.ini
	ENDIF 
	fo = FCREATE('mem_tmp.ini')
	DO WHILE !FEOF(fi)
		sirCitit = ALLTRIM(FGETS(fi))
		if upper(left(sirCitit,2)) = 'M_'
			spaceAt = at(' ',sirCitit)
			IF spaceAt>0
				numeVar = UPPER(left(sirCitit,spaceAt))
			ELSE
				numeVar = sirCitit
			ENDIF 
			valVar = dataFormat(&numeVar)
			**numeVar = newNumeVar(numeVar)
			IF !EMPTY(numeVar) AND !INLIST(numeVar,'m_tb','m_sc','m_nc','m_lpag')
				=FPUTS(fo, "*")
				=FPUTS(fo, "PUBLIC "+numeVar)
				=FPUTS(fo, numeVar+"= " + valVar )
			ENDIF
		endif
	ENDDO 
	=FCLOSE(fi)
	=FCLOSE(fo)
	=ADIR(arrayMem, 'mem_tmp.ini')
	IF FILE('mem_tmp.ini') AND arrayMem[2] > 0 		&& file size>0
		COPY FILE mem_tmp.ini TO mem.ini
	ENDIF
	IF !FILE('mem.ini') AND FILE('mem_bak.ini')
		** salvare esuata, revenim la date\mem_bak.ini
		COPY FILE mem_bak.ini TO mem.ini
	ENDIF
	**erase step files
	ERASE mem.tmp
	ERASE mem_tmp.ini
	ERASE mem_bak.ini
***return is needed to exit the program
RETURN 
*************************************************
PROCEDURE dataFormat
PARAMETERS value
DO CASE
 
	CASE TYPE('value')='N'		&& NUMBER
		RETURN ALLTRIM(PADL(value,30))
		
	CASE TYPE('value')='D'		&& DATE
	    IF EMPTY(value) 
	    	return '{}'
	    ELSE
	    	RETURN "DATE("+PADL(YEAR(value),4)+","+PADL(MONTH(value),2,'0')+","+PADL(DAY(value),2,'0')+")"
	    ENDIF
	    
	CASE TYPE('value')='L'		&& LOGICAL
		RETURN IIF(value,'.T.','.F.')
		
	OTHERWISE 					&& CHAR
		tmpsir = STRTRAN(value, CHR(13), "" )
		rez=""
		DO WHILE !EMPTY(tmpsir)
			tmpsir = STRTRAN(tmpSIR,'[','<')		
			tmpsir = STRTRAN(tmpSIR,']','>')
			rez = rez + "+["+LEFT(tmpsir,255)+"]"
			tmpsir = SUBSTR(tmpsir,256)			
		ENDDO
		IF LEFT(rez ,1)='+'
			rez = SUBSTR(rez ,2)
		ENDIF 
		IF EMPTY(rez)
			rez = "[]"
		ENDIF 		
		RETURN rez
ENDCASE 
RETURN ''
************************************************
*<Separator/>*
*retreiveProducts.prg
*<Separator/>*
	SELECT 0
	USE fp SHARED ALIAS fpTemp
	SELECT * FROM fpTemp INTO CURSOR fpCursor WHERE !DELETED()
	USE IN fpTemp
	SELECT fpCursor
	handler=FCREATE('produse.sql')
	SCAN
		insertString = "INSERT INTO produse(local_id,codp,denm,um,tva,pc,pcv,contp,pv,grupa,fuben,producator,pcval,pvval,codval,data,um2,um1um2,"+;
						"um3,um2um3,incadrare,ct,net,reteta_old,formula,dataexp,lot,codtimbru,divizie,psmentor,divizie,psmentor,codext,denext,"+;
						"cod394,pcrol,pvrol,pcvrol,z_old) "+;
						"VALUES("+ALLTRIM(STR(fpCursor.id,20))+;
							",'"+ALLTRIM(fpCursor.codp)+"'"+;
							",'"+ALLTRIM(fpCursor.denm)+"'"+;
							",'"+ALLTRIM(fpCursor.um)+"'"+;
							","+ALLTRIM(STR(fpCursor.tva,2,0))+;
							","+ALLTRIM(STR(fpCursor.pc,20,8))+;
							","+ALLTRIM(STR(fpCursor.pcv,20,8))+;
							",'"+ALLTRIM(fpCursor.contp)+"'"+;
							","+ALLTRIM(STR(fpCursor.pv,20,8))+;
							",'"+ALLTRIM(fpCursor.grupa)+"'"+;
							",'"+ALLTRIM(fpCursor.fuben)+"'"+;
							",'"+ALLTRIM(fpCursor.producator)+"'"+;
							","+ALLTRIM(STR(fpCursor.pcval,20,8))+;
							","+ALLTRIM(STR(fpCursor.pvval,20,8))+;
							",'"+ALLTRIM(fpCursor.codval)+"'"+;
							",'"+dateFormat(fpCursor.data)+"'"+;
							",'"+ALLTRIM(fpCursor.um2)+"'"+;
							","+ALLTRIM(STR(fpCursor.um1um2,10,2))+;
							",'"+ALLTRIM(fpCursor.um3)+"'"+;
							","+ALLTRIM(STR(fpCursor.um2um3,10,2))+;
							",'"+ALLTRIM(fpCursor.incadrare)+"'"+;
							","+ALLTRIM(STR(fpCursor.ct,11,4))+;
							","+ALLTRIM(STR(fpCursor.net,11,4))+;
							","+IIF(fpCursor.reteta,"true","false")+;
							",'"+ALLTRIM(fpCursor.formula)+"'"+;
							",'"+dateFormat(fpCursor.dataexp)+"'"+;
							",'"+ALLTRIM(fpCursor.lot)+"'"+;
							",'"+ALLTRIM(fpCursor.codtimbru)+"'"+;
							",'"+ALLTRIM(fpCursor.divizie)+"'"+;
							","+ALLTRIM(STR(fpCursor.psmentor,10,0))+;
							",'"+ALLTRIM(fpCursor.codext)+"'"+;
							",'"+ALLTRIM(fpCursor.denext)+"'"+;
							",'"+ALLTRIM(fpCursor.cod394)+"'"+;
							","+ALLTRIM(STR(fpCursor.pcrol,20,8))+;
							","+ALLTRIM(STR(fpCursor.pvrol,20,8))+;
							",'"+ALLTRIM(STR(fpCursor.pcvrol,20,8))+"'"+;
							","+IIF(fpCursor.z_,"true","false")+")"
		=fputs(handler,insertString)
	ENDSCAN
	=fclose(handler)
***return is needed to exit the program
RETURN 
*************************************************
PROCEDURE dateFormat
PARAMETERS value
	IF(EMPTY(value)) 
		RETURN '2000-01-01'
	ELSE.0
		newDate = PADL(YEAR(value),4,'0')+'-'+PADL(MONTH(value),2,'0')+'-'+PADL(DAY(value),2,'0')
		RETURN newDate
	ENDIF
*************************************************
*<Separator/>*